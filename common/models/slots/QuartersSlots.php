<?php

namespace common\models\slots;

use common\models\activity\Activity;
use Yii;

/**
 * This is the model class for table "quarters_slots".
 *
 * @property integer $id
 * @property integer $quarter
 * @property integer $year
 */
class QuartersSlots extends \yii\db\ActiveRecord
{
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'quarters_slots';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['quarter', 'year'], 'integer'],
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'quarter' => 'Quarter',
            'year' => 'Year',
        ];
    }

    public function beforeDelete ()
    {
        QuartersSlotActivities::deleteAll(['slot_id' => $this->id]);

        return parent::beforeDelete(); // TODO: Change the autogenerated stub
    }

    public function getActivities() {
        $result = [];

        foreach (QuartersSlotActivities::find()->where(['slot_id' => $this->id])->orderBy(['activity_id' => SORT_DESC])->all() as $item) {
            $result[$item->activity_id] = Activity::find()->select(['id', 'name'])->where(['id' => $item->activity_id])->one();
        }

        return $result;
    }

    /**
     * Get slots list
     * @param $year
     * @param $quarter
     * @return array|\yii\db\ActiveRecord[]
     */
    public static function getSlotsList($year, $quarter) {
        return static::find()->where(['year' => $year, 'quarter' => $quarter])->orderBy(['id' => SORT_ASC])->all();
    }

    /**
     * Add new slot
     * @param $year
     * @param $quarter
     * @return bool
     */
    public static function addSlot($year, $quarter) {
        $item = new QuartersSlots();
        $item->year = $year;
        $item->quarter = $quarter;

        return $item->save();
    }

    public function setUnsetActivity($activityId, $set) {
        if (!$set) {
            QuartersSlotActivities::deleteAll(['slot_id' => $this->id, 'activity_id' => $activityId]);
        } else {
            $item = new QuartersSlotActivities();
            $item->activity_id = $activityId;
            $item->slot_id = $this->id;

            $item->save();
        }

        return true;
    }
}
